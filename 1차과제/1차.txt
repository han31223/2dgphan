1.1 2019182043 한태희

 

1.2 3

 

1.3 c언어 , c++, 비주얼스튜디오, 안드로이드 스튜디오

 

1.4 진도가 너무 빠르지 않았으면 합니다.

 

2.

객체지향은 객체를 지향한다. 객체는 구체적인 대상 지향은 향한다 (여기선 '선호'의 뜻으로 봄) 라는 뜻으로 구체적인 대상을 향한다 ( 선호) 한다라는 것을 말하는 것이다. 객체지향에는 클래스, 오브젝트, 캡슐화, 상속성, 다형성 이렇게 5가지 키워드가 있다. 클래스는 특징에 대한 서술을 말한것이다. 이것은 추상이라고도 하며 추상은 사용자가  구체적인 내용을 생각하지 않고도 사용할수 있는 기능을 말한것이다.  오브젝트는 클래스의 인스턴스로 클래스가 실체로 만들어진것이다.  클래스라는 공통특징 안에 오브젝트라는 실체가 존재하는 것이다. 캡슐화는 데이터 + 데이터에 대한 조작을 묶는 것을 말하는것이고 묶어서 이름을 부여하는 추상화이다. 상속성은 말그대로 하나의 클래스가 가지고 있는 특징들을 그대로 다른 클래스가 물려받는 것이다. 여기서 특징들은 데이터와 조작을 말한다. 상속성은 물려받는거 뿐 아니라 계층의 의미도 가지고 있다. 다형성은 상속성의 계층을 따라서 클래스에 한가지 이름을 주는 것이다.  같은 명령을 각기 다른 오브젝트에 줄수있다는 뜻이다. 객체지향에서 프로그램은 오브젝트에 매세지를 보내는 것으로 실행한다. 최초의 객체지향 언어 "Simula67"은 시뮬레이션을 위해 만들어진 언어이다. 객체지향의 장점으로는 자연스러운 모델링, 생산성 향상, 점진적 개발, 견고한 의미적 모델링, 명확한 인터페이스 기술, 보안, 유지보수의 용이성 등이 있다. 객체지향의 분석/설계를 요약하면 식별을 일반화한뒤 대상들간의 관계를 설정하고 서로 상호작용 하도록한다.  구조적 프로그래밍과의 차이점은 구조적 프로그래밍은 기능과 절차를 중시한다면 객체지향 프로그래밍은 객체와 관계를 중시한다. 객체지향을 어려운 말이라고 생각할 수 있는데 그 말들을 세부적으로 분리하고 같은 뜻의 다른 단어들과 다른 예시를 보여주며 설명했기에 이해하기쉬웠다.

 

3.

커맨더 라인은 윈도우와 mac os x 리눅스가 모두 실행시키는 방법이 다르다. 대표적으로 윈도우는 시작메뉴 > 모든 프로그램 > 보조프로그램 > 명령프롬프트 를 실행시키면 된다. 처음 실행시키면 > 이런 기호가 떠있다. 첫번째로 해볼 명령어는 whoami 이다. 이명령어를 치면 말그대로 사용자이름을 보여준다. 그 다음 명령어는 cd 이다 이명령어는 현재 어느 디렉터리에 있는지 보여준다. 또 dir 명령어를 치면 현재 내가 있는 디렉터리에 있는 파일과 디렉터리 목록을 볼 수 있다. 또한 cd (디렉터리) 를 치면 그 디렉터리로 이동할수 있다. 여기선 디렉터리를 만들수도 있는데 mkdir (디렉터리이름)을 치면 디렉터리 생성이 가능하다. 상위 디렉터리로 가는 방법은 cd .. 을 명령어로 치면 상위 디렉터리로갈 수 있다. 디렉터리를 삭제하고싶다면 rmdir, del , rm 의 명령어와 디렉터리를 쓰면 삭제할수 있다.

 

3점 : 그래픽 인터페이스가 없는 이런 프로그램을 많이 다뤄보지않았다