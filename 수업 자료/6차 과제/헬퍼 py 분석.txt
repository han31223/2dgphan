import math

# arguments: pos, delta, target
# - pos = (x, y) tuple
# - delta = (dx, dy) tuple
# - target = (x, y) tuple
# returns: (pos, done)
# - pos = (x, y) tuple
# - done = True if arrived
def move_toward(pos, delta, target):         #def move_toward 라고 쓰여있어 move_foward 라는 함수를 정의 하고 있음을 알수 있다
옆에 괄호에 pos delta target 가 쓰여있어 이 3가지 값을 받는걸 알 수 있다.
    done = False      # done 을 False로 두고
    x,y = pos[0] + delta[0], pos[1] + delta[1]               #x와 y에 각각 pos[0] + delta[0], pos[1] + delta[1]을 
집어 넣는다.

    if delta[0] > 0 and x >= target[0] or delta[0] < 0 and x <= target[0]:               # if 문을 활용하여 pos의 x값이 target에 맞는 값인지 확인후 그 값이 맞다면 done를 True로 둔다
        done = True
    if delta[1] > 0 and y >= target[1] or delta[1] < 0 and y <= target[1]:              # if 문을 활용하여 pos의 y값이 target에 맞는 값인지 확인후 그 값이 맞다면 done를 True로 둔다
        done = True

    pos = target if done else (x,y)                  # done이 True라면 target 를 pos에 두고 아니라면 (x,y)를 둔다.

    return (pos, done)                    # pos 와 done 를 리턴한다.

# arguments: pos, target, speed
# - pos = (x, y) tuple
# - target = (x, y) tuple
# - speed = pixels per frame
# returns: (dx, dy)
# - x/y pixels per frame
def delta(pos, target, speed):              # delta라는 함수를 정의 하는데 pos target speed 3가지를 받아서 사용한다
    dx, dy = target[0] - pos[0], target[1] - pos[1]             # target과 pos 의 변화를 dx dy 에 둔다
    distance = math.sqrt(dx**2 + dy**2)                      # sqrt를 이용하여 target과 pos의 거리를 계산한다.
    if distance == 0: return 0, 0                               # 거리가 0이면 즉, 같은위치면 0,0으로 리턴한다.
    return dx * speed / distance, dy * speed / distance               # x와 y의 값이 한프레임에 이동하는 거리를 리턴한다.




# object version

def move_toward_obj(obj):                             # obj 하나를  받아 사용 하는 함수
    if obj.target == None: return                     # target가 없다면 즉시종료
    pos, done = move_toward(obj.pos, obj.delta, obj.target)             # move_toward 함수에 오브젝트 pos delta target 를 적어 이동한다
    if done:                                    # done 이 True 일때
        obj.target = None                 #target 를 None로 하고
        obj.delta = 0,0                    #  델타를 0,0으로 하고

    obj.pos = pos                       # 오브젝트의 pos를 이동된 pos로 둔다

def set_target(obj, target):                 # obj target 두개를 받아 사용하는 함수
    obj.target = target                  # target을 오브젝트의 targe에 둔다.
    obj.delta = 0,0 if target is None else delta(obj.pos, target, obj.speed)            # target가 None이라면 0,0으로 오브젝트의 delta를 두고 아니라면 delta 함수의 값을 둔다



